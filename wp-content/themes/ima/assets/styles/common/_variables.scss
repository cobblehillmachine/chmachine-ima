
/* Breakpoint Mixin */
$breakpoints: (
  xl: (min-width: 100em),
  l:  (max-width: 75em),
  m:  (max-width: 55em),
  s:  (max-width: 37.5em),
  xs: (max-width: 18.75em),
  custom: (max-width: 1066px)
);

@mixin bp($name) {
  $value: map-get($breakpoints, $name);
  @if map-has-key($breakpoints, $name) {
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  @else {
    @warn "The '#{$name}' breakpoint is not defined. "
        + "Please make sure it is defined in the global.scss '$breakpoint' map.";
  }
}

/* Colors */
$brand-primary:         #27ae60;
$color-gray:            #f6f6f6;
$color-black:           #000;
$color-red:             #e73325;
$color-white:           #fff;
$color-purple:          #45277a;
$color-blue:            #156ba0;
$color-blue-light:      #2374ab;
$color-orange:          #da7824;
$color-orange-light:    #ea8024;
$color-green:           #478d43;

/* Global options */
$enable-flex:           true;

/* Grid settings */
$main-sm-columns:       12;
$sidebar-sm-columns:    4;

/* Vendor variables */
$fa-font-path:          '~font-awesome/fonts';

/* Font Sizes */
$font-size-xsmall: 12px;
$font-size-small: 15px;
$font-size-medium: 18px;
$font-size-medium-large: 28px;
$font-size-large: 34px;
$font-size-xlarge: 54px;

/* Aspect Ration Mixin */
 /* Usage: @include aspect-ratio(16, 9)  */

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

